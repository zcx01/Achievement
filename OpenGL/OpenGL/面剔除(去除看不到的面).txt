面剔除
优化性能
原理:
OpenGL能够检查所有面向(Front Facing)观察者的面，并渲染它们，而丢弃那些背向(Back Facing)的面，节省我们很多的片段着色器调用（它们的开销很大！）
但我们仍要告诉OpenGL哪些面是正向面(Front Face)，哪些面是背向面(Back Face)。OpenGL使用了一个很聪明的技巧，分析顶点数据的环绕顺序(Winding Order)。
但注意这只对像立方体这样的封闭形状有效

-----------------------------------------环绕顺序-----------------------------------------
画三角形的顺序。
1.默认情况下，逆时针顶点所定义的三角形将会被处理为正向三角形。当你定义顶点顺序的时候，对应的三角形是面向你的，所以定义的三角形应该是逆时针的。
2.此过程在光栅化阶段进行的。
3.我们所面向的三角形将会是正向三角形，而背面的三角形则是背向三角形
4.将两个三角形都以逆时针顺序定义,虽然背面的三角形是以逆时针定义的，它现在是以顺时针顺序渲染的了


glEnable(GL_CULL_FACE);
//启用面剔除
//但注意这只对像立方体这样的封闭形状有效

glCullFace(GL_FRONT);
//改变剔除的面的类型
参数1:
GL_BACK				只剔除背向面。(默认)
GL_FRONT			只剔除正向面。
GL_FRONT_AND_BACK	剔除正向面和背向面。

glFrontFace(GL_CCW);
//改变正向面环绕顺序
参数1:
GL_CCW	 逆时针的环绕顺序
GL_CW	 顺时针的环绕顺序