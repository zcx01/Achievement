深度测试
深度缓冲(Depth Buffer)来防止被阻挡的面渲染到其它面的前面

深度缓冲是在片段着色器运行之后（以及模板测试(Stencil Testing)运行之后，我们将在下一节中讨论）在屏幕空间中运行的

gl_FragCoord的x和y分量代表了片段的屏幕空间坐标（其中(0,0)位于左下角）。gl_FragCoord中也包含了一个z分量，它包含了片段真正的深度值。z值就是需要与深度缓冲内容所对比的那个值


glEnable(GL_DEPTH_TEST);
//要启用深度测试,默认是禁用的
//OpenGL会在深度缓冲中储存该片段的z值；如果没有通过深度缓冲，则会丢弃该片段

glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
//GL_DEPTH_BUFFER_BIT来清除深度缓冲，否则你会仍在使用上一次渲染迭代中的写入的深度值

glDepthMask(GL_FALSE);
//禁用深度缓冲的写入

glDepthFunc(GL_LESS);
//更新深度缓冲的模式
参数
GL_ALWAYS	永远通过深度测试
GL_NEVER	永远不通过深度测试
GL_LESS		在片段深度值 < 缓冲的深度值时通过测试(默认)
GL_EQUAL	在片段深度值 = 缓冲区的深度值时通过测试
GL_LEQUAL	在片段深度值 <=缓冲区的深度值时通过测试
GL_GREATER	在片段深度值 > 缓冲区的深度值时通过测试
GL_NOTEQUAL	在片段深度值 !=缓冲区的深度值时通过测试
GL_GEQUAL	在片段深度值 >=缓冲区的深度值时通过测试

-----------------------------------------深度值精度-----------------------------------------
深度缓冲包含了一个介于0.0和1.0之间的深度值，它将会与观察者视角所看见的场景中所有物体的z值进行比较

-----------------------------------------深度冲突-----------------------------------------
结果就是这两个形状不断地在切换前后顺序
防止深度冲突：
1.永远不要把多个物体摆得太靠近
2.尽可能将近平面设置远一些
3.使用更高精度的深度缓冲（部分深度缓冲的精度都是24位的，但现在大部分的显卡都支持32位的深度缓冲，这将会极大地提高精度）