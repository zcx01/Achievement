#ifndef DATATRANSMIT_H
#define DATATRANSMIT_H
#include <QGraphicsItem>
#include <QWidget>
class CZBase;
class CManagementTool;
typedef bool (*SceneEventFilter)(QGraphicsItem*,QEvent *,CZBase *,CManagementTool*);
typedef bool (*SceneEvent)(QEvent *, CZBase *,CManagementTool*);
typedef bool (*ContextMenuEvent)(QGraphicsSceneContextMenuEvent *,CZBase *,CManagementTool*);
typedef bool (*DragEnterEvent)(QGraphicsSceneDragDropEvent *,CZBase *,CManagementTool*);
typedef bool (*DragLeaveEvent)(QGraphicsSceneDragDropEvent *,CZBase *,CManagementTool*);
typedef bool (*DragMoveEvent)(QGraphicsSceneDragDropEvent *,CZBase *,CManagementTool*);
typedef bool (*DropEvent)(QGraphicsSceneDragDropEvent *,CZBase *,CManagementTool*);
typedef bool (*FocusInEvent)(QFocusEvent *,CZBase *,CManagementTool*);
typedef bool (*FocusOutEvent)(QFocusEvent *,CZBase *,CManagementTool*);
typedef bool (*HoverEnterEvent)(QGraphicsSceneHoverEvent *,CZBase *,CManagementTool*);
typedef bool (*HoverMoveEvent)(QGraphicsSceneHoverEvent *,CZBase *,CManagementTool*);
typedef bool (*HoverLeaveEvent)(QGraphicsSceneHoverEvent *,CZBase *,CManagementTool*);
typedef bool (*KeyPressEvent)(QKeyEvent *,CZBase *,CManagementTool*);
typedef bool (*KeyReleaseEvent)(QKeyEvent *,CZBase *,CManagementTool*);
typedef bool (*MousePressEvent)(QGraphicsSceneMouseEvent *,CZBase *,CManagementTool*);
typedef bool (*MouseMoveEvent)(QGraphicsSceneMouseEvent *,CZBase *,CManagementTool*);
typedef bool (*MouseReleaseEvent)(QGraphicsSceneMouseEvent *,CZBase *,CManagementTool*);
typedef bool (*MouseDoubleClickEvent)(QGraphicsSceneMouseEvent *,CZBase *,CManagementTool*);
typedef bool (*WheelEvent)(QGraphicsSceneWheelEvent *,CZBase *,CManagementTool*);
typedef bool (*InputMethodEvent)(QInputMethodEvent *,CZBase *,CManagementTool*);
typedef bool (*ItemChange)(QGraphicsItem::GraphicsItemChange change, const QVariant &value,CZBase *,CManagementTool*);

typedef bool (*ViewEvent                  )(QEvent *,CManagementTool*);
typedef bool (*ViewCustomEvent            )(QEvent *,CManagementTool*);
typedef bool (*ViewMousePressEvent        )(QMouseEvent *,CManagementTool*);
typedef bool (*ViewMouseReleaseEvent      )(QMouseEvent *,CManagementTool*);
typedef bool (*ViewMouseDoubleClickEvent  )(QMouseEvent *,CManagementTool*);
typedef bool (*ViewMouseMoveEvent         )(QMouseEvent *,CManagementTool*);
typedef bool (*ViewWheelEvent             )(QWheelEvent *,CManagementTool*);
typedef bool (*ViewKeyPressEvent          )(QKeyEvent *,CManagementTool*);
typedef bool (*ViewKeyReleaseEvent        )(QKeyEvent *,CManagementTool*);
typedef bool (*ViewFocusInEvent           )(QFocusEvent *,CManagementTool*);
typedef bool (*ViewFocusOutEvent          )(QFocusEvent *,CManagementTool*);
typedef bool (*ViewEnterEvent             )(QEvent *,CManagementTool*);
typedef bool (*ViewLeaveEvent             )(QEvent *,CManagementTool*);
typedef bool (*ViewPaintEvent             )(QPaintEvent *,CManagementTool*);
typedef bool (*ViewMoveEvent              )(QMoveEvent *,CManagementTool*);
typedef bool (*ViewResizeEvent            )(QResizeEvent *,CManagementTool*);
typedef bool (*ViewCloseEvent             )(QCloseEvent *,CManagementTool*);
typedef bool (*ViewContextMenuEvent       )(QContextMenuEvent *,CManagementTool*);
typedef bool (*ViewDragEnterEvent         )(QDragEnterEvent *,CManagementTool*);
typedef bool (*ViewDragMoveEvent          )(QDragMoveEvent *,CManagementTool*);
typedef bool (*ViewDragLeaveEvent         )(QDragLeaveEvent *,CManagementTool*);
typedef bool (*ViewDropEvent              )(QDropEvent *,CManagementTool*);
typedef bool (*ViewShowEvent              )(QShowEvent *,CManagementTool*);
typedef bool (*ViewHideEvent              )(QHideEvent *,CManagementTool*);
typedef bool (*ViewInputMethodEvent       )(QInputMethodEvent *,CManagementTool*);
typedef bool (*ViewFocusNextPrevChild     )(bool next,CManagementTool*);
typedef bool (*SetManagementTool)();
class DataTransmit
{
public:
    DataTransmit();
    static bool itemSceneEventFilter(QGraphicsItem *watched, QEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemSceneEvent(QEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemContextMenuEvent(QGraphicsSceneContextMenuEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemDragEnterEvent(QGraphicsSceneDragDropEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemDragLeaveEvent(QGraphicsSceneDragDropEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemDragMoveEvent(QGraphicsSceneDragDropEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemDropEvent(QGraphicsSceneDragDropEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemFocusInEvent(QFocusEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemFocusOutEvent(QFocusEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemHoverEnterEvent(QGraphicsSceneHoverEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemHoverMoveEvent(QGraphicsSceneHoverEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemHoverLeaveEvent(QGraphicsSceneHoverEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemKeyPressEvent(QKeyEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemKeyReleaseEvent(QKeyEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemMousePressEvent(QGraphicsSceneMouseEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemMouseMoveEvent(QGraphicsSceneMouseEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemMouseReleaseEvent(QGraphicsSceneMouseEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemMouseDoubleClickEvent(QGraphicsSceneMouseEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemWheelEvent(QGraphicsSceneWheelEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemInputMethodEvent(QInputMethodEvent *event,CZBase *sourceItem,QString eventId);
    static bool itemItemChange(QGraphicsItem::GraphicsItemChange change, const QVariant &value,CZBase *sourceItem,QString eventId);

    static void addManagementTool(QString id,CManagementTool* tool);
    static void removeManagementTool(QString id);
    static void setSceneEventFilter(SceneEventFilter sceneEventFilter);
    static void setSceneEvent(SceneEvent sceneEvent);
    static void setContextMenuEvent(ContextMenuEvent contextMenuEvent);
    static void setDragEnterEvent(DragEnterEvent dragEnterEvent);
    static void setDragLeaveEvent(DragLeaveEvent dragLeaveEvent);
    static void setDragMoveEvent(DragMoveEvent dragMoveEvent);
    static void setDropEvent(DropEvent dropEvent);
    static void setFocusInEvent(FocusInEvent focusInEvent);
    static void setFocusOutEvent(FocusOutEvent focusOutEvent);
    static void setHoverEnterEvent(HoverEnterEvent hoverEnterEvent);
    static void setHoverMoveEvent(HoverMoveEvent hoverMoveEvent);
    static void setHoverLeaveEvent(HoverLeaveEvent hoverLeaveEvent);
    static void setKeyPressEvent(KeyPressEvent keyPressEvent);
    static void setKeyReleaseEvent(KeyReleaseEvent keyReleaseEvent);
    static void setMousePressEvent(MousePressEvent mousePressEvent);
    static void setMouseMoveEvent(MouseMoveEvent mouseMoveEvent);
    static void setMouseReleaseEvent(MouseReleaseEvent mouseReleaseEvent);
    static void setMouseDoubleClickEvent(MouseDoubleClickEvent mouseDoubleClickEvent);
    static void setWheelEvent(WheelEvent wheelEvent);
    static void setInputMethodEvent(InputMethodEvent inputMethodEvent);
    static void setItemChange(ItemChange itemChange);


    static bool viewEvent                   (QEvent *event,QString eventId);
    static bool viewCustomEvent             (QEvent *event,QString eventId);
    static bool viewMousePressEvent        (QMouseEvent *event,QString eventId);
    static bool viewMouseReleaseEvent      (QMouseEvent *event,QString eventId);
    static bool viewMouseDoubleClickEvent  (QMouseEvent *event,QString eventId);
    static bool viewMouseMoveEvent         (QMouseEvent *event,QString eventId);
    static bool viewWheelEvent             (QWheelEvent *event,QString eventId);
    static bool viewKeyPressEvent          (QKeyEvent *event,QString eventId);
    static bool viewKeyReleaseEvent        (QKeyEvent *event,QString eventId);
    static bool viewFocusInEvent           (QFocusEvent *event,QString eventId);
    static bool viewFocusOutEvent          (QFocusEvent *event,QString eventId);
    static bool viewEnterEvent             (QEvent *event,QString eventId);
    static bool viewLeaveEvent             (QEvent *event,QString eventId);
    static bool viewPaintEvent             (QPaintEvent *event,QString eventId);
    static bool viewMoveEvent              (QMoveEvent *event,QString eventId);
    static bool viewResizeEvent            (QResizeEvent *event,QString eventId);
    static bool viewCloseEvent             (QCloseEvent *event,QString eventId);
    static bool viewContextMenuEvent       (QContextMenuEvent *event,QString eventId);
    static bool viewDragEnterEvent         (QDragEnterEvent *event,QString eventId);
    static bool viewDragMoveEvent          (QDragMoveEvent *event,QString eventId);
    static bool viewDragLeaveEvent         (QDragLeaveEvent *event,QString eventId);
    static bool viewDropEvent              (QDropEvent *event,QString eventId);
    static bool viewShowEvent              (QShowEvent *event,QString eventId);
    static bool viewHideEvent              (QHideEvent *event,QString eventId);
    static bool viewInputMethodEvent       (QInputMethodEvent *event,QString eventId);
    static bool viewFocusNextPrevChild     (bool next,QString eventId);


    static void setViewEvent                   (ViewEvent viewEvent                                 );
    static void setViewCustomEvent             (ViewCustomEvent viewCustomEvent                     );
    static void setViewMousePressEvent          (ViewMousePressEvent       viewMousePressEvent      );
    static void setViewMouseReleaseEvent        (ViewMouseReleaseEvent     viewMouseReleaseEvent    );
    static void setViewMouseDoubleClickEvent    (ViewMouseDoubleClickEvent viewMouseDoubleClickEvent);
    static void setViewMouseMoveEvent           (ViewMouseMoveEvent        viewMouseMoveEvent       );
    static void setViewWheelEvent               (ViewWheelEvent            viewWheelEvent           );
    static void setViewKeyPressEvent            (ViewKeyPressEvent         viewKeyPressEvent        );
    static void setViewKeyReleaseEvent          (ViewKeyReleaseEvent       viewKeyReleaseEvent      );
    static void setViewFocusInEvent             (ViewFocusInEvent          viewFocusInEvent         );
    static void setViewFocusOutEvent            (ViewFocusOutEvent         viewFocusOutEvent        );
    static void setViewEnterEvent               (ViewEnterEvent            viewEnterEvent           );
    static void setViewLeaveEvent               (ViewLeaveEvent            viewLeaveEvent           );
    static void setViewPaintEvent               (ViewPaintEvent            viewPaintEvent           );
    static void setViewMoveEvent                (ViewMoveEvent             viewMoveEvent            );
    static void setViewResizeEvent              (ViewResizeEvent           viewResizeEvent          );
    static void setViewCloseEvent               (ViewCloseEvent            viewCloseEvent           );
    static void setViewContextMenuEvent         (ViewContextMenuEvent      viewContextMenuEvent     );
    static void setViewDragEnterEvent           (ViewDragEnterEvent        viewDragEnterEvent       );
    static void setViewDragMoveEvent            (ViewDragMoveEvent         viewDragMoveEvent        );
    static void setViewDragLeaveEvent           (ViewDragLeaveEvent        viewDragLeaveEvent       );
    static void setViewDropEvent                (ViewDropEvent             viewDropEvent            );
    static void setViewShowEvent                (ViewShowEvent             viewShowEvent            );
    static void setViewHideEvent                (ViewHideEvent             viewHideEvent            );
    static void setViewInputMethodEvent         (ViewInputMethodEvent      viewInputMethodEvent     );
    static void setViewFocusNextPrevChild       (ViewFocusNextPrevChild    viewFocusNextPrevChild   );

private:
    static QHash<QString,CManagementTool*>m_ManagementTool;
    static SceneEventFilter             m_SceneEventFilter;
    static SceneEvent                   m_SceneEvent;
    static ContextMenuEvent             m_ContextMenuEvent;
    static DragEnterEvent               m_DragEnterEvent;
    static DragLeaveEvent               m_DragLeaveEvent;
    static DragMoveEvent                m_DragMoveEvent;
    static DropEvent                    m_DropEvent;
    static FocusInEvent                 m_FocusInEvent;
    static FocusOutEvent                m_FocusOutEvent;
    static HoverEnterEvent              m_HoverEnterEvent;
    static HoverMoveEvent               m_HoverMoveEvent;
    static HoverLeaveEvent              m_HoverLeaveEvent;
    static KeyPressEvent                m_KeyPressEvent;
    static KeyReleaseEvent              m_KeyReleaseEvent;
    static MousePressEvent              m_MousePressEvent;
    static MouseMoveEvent               m_MouseMoveEvent;
    static MouseReleaseEvent            m_MouseReleaseEvent;
    static MouseDoubleClickEvent        m_MouseDoubleClickEvent;
    static WheelEvent                   m_WheelEvent;
    static InputMethodEvent             m_InputMethodEvent;
    static ItemChange                   m_ItemChange;

    static ViewEvent                    m_ViewEvent                  ;
    static ViewCustomEvent              m_ViewCustomEvent            ;
    static ViewMousePressEvent          m_ViewMousePressEvent        ;
    static ViewMouseReleaseEvent        m_ViewMouseReleaseEvent      ;
    static ViewMouseDoubleClickEvent    m_ViewMouseDoubleClickEvent  ;
    static ViewMouseMoveEvent           m_ViewMouseMoveEvent         ;
    static ViewWheelEvent               m_ViewWheelEvent             ;
    static ViewKeyPressEvent            m_ViewKeyPressEvent          ;
    static ViewKeyReleaseEvent          m_ViewKeyReleaseEvent        ;
    static ViewFocusInEvent             m_ViewFocusInEvent           ;
    static ViewFocusOutEvent            m_ViewFocusOutEvent          ;
    static ViewEnterEvent               m_ViewEnterEvent             ;
    static ViewLeaveEvent               m_ViewLeaveEvent             ;
    static ViewPaintEvent               m_ViewPaintEvent             ;
    static ViewMoveEvent                m_ViewMoveEvent              ;
    static ViewResizeEvent              m_ViewResizeEvent            ;
    static ViewCloseEvent               m_ViewCloseEvent             ;
    static ViewContextMenuEvent         m_ViewContextMenuEvent       ;
    static ViewDragEnterEvent           m_ViewDragEnterEvent         ;
    static ViewDragMoveEvent            m_ViewDragMoveEvent          ;
    static ViewDragLeaveEvent           m_ViewDragLeaveEvent         ;
    static ViewDropEvent                m_ViewDropEvent              ;
    static ViewShowEvent                m_ViewShowEvent              ;
    static ViewHideEvent                m_ViewHideEvent              ;
    static ViewInputMethodEvent         m_ViewInputMethodEvent       ;
    static ViewFocusNextPrevChild       m_ViewFocusNextPrevChild     ;
};

#endif // DATATRANSMIT_H
